# Autogenerated by nbdev

d = { 'settings': { 'branch': 'master',
                'doc_baseurl': '/tmenv/',
                'doc_host': 'https://trackmania-ai.github.io',
                'git_url': 'https://github.com/trackmania-ai/tmenv/tree/master/',
                'lib_path': 'tmenv'},
  'syms': { 'tmenv.game': { 'tmenv.game.Game': ('game.html#game', 'tmenv/game.py'),
                            'tmenv.game.Game.__init__': ('game.html#game.__init__', 'tmenv/game.py'),
                            'tmenv.game.Game.act': ('game.html#game.act', 'tmenv/game.py'),
                            'tmenv.game.Game.capture_tensor': ('game.html#game.capture_tensor', 'tmenv/game.py'),
                            'tmenv.game.Game.close': ('game.html#game.close', 'tmenv/game.py'),
                            'tmenv.game.Game.give_up': ('game.html#game.give_up', 'tmenv/game.py'),
                            'tmenv.game.Game.input_lag': ('game.html#game.input_lag', 'tmenv/game.py'),
                            'tmenv.game.Game.load_map': ('game.html#game.load_map', 'tmenv/game.py'),
                            'tmenv.game.Game.previous_telemetry': ('game.html#game.previous_telemetry', 'tmenv/game.py'),
                            'tmenv.game.Game.recover': ('game.html#game.recover', 'tmenv/game.py'),
                            'tmenv.game.Game.respawn': ('game.html#game.respawn', 'tmenv/game.py'),
                            'tmenv.game.Game.save_ghost': ('game.html#game.save_ghost', 'tmenv/game.py'),
                            'tmenv.game.Game.start_and_connect_game': ('game.html#game.start_and_connect_game', 'tmenv/game.py'),
                            'tmenv.game.Game.telemetry': ('game.html#game.telemetry', 'tmenv/game.py'),
                            'tmenv.game.Game.toggle_interface': ('game.html#game.toggle_interface', 'tmenv/game.py'),
                            'tmenv.game.GiveUpTimeoutException': ('game.html#giveuptimeoutexception', 'tmenv/game.py'),
                            'tmenv.game.LoadMapTimeoutException': ('game.html#loadmaptimeoutexception', 'tmenv/game.py'),
                            'tmenv.game.RespawnTimeoutException': ('game.html#respawntimeoutexception', 'tmenv/game.py')},
            'tmenv.gamepad': { 'tmenv.gamepad.TmGamepad': ('gamepad.html#tmgamepad', 'tmenv/gamepad.py'),
                               'tmenv.gamepad.TmGamepad.__del__': ('gamepad.html#tmgamepad.__del__', 'tmenv/gamepad.py'),
                               'tmenv.gamepad.TmGamepad.__init__': ('gamepad.html#tmgamepad.__init__', 'tmenv/gamepad.py'),
                               'tmenv.gamepad.TmGamepad.act': ('gamepad.html#tmgamepad.act', 'tmenv/gamepad.py'),
                               'tmenv.gamepad.TmGamepad.configure': ('gamepad.html#tmgamepad.configure', 'tmenv/gamepad.py'),
                               'tmenv.gamepad.TmGamepad.give_up': ('gamepad.html#tmgamepad.give_up', 'tmenv/gamepad.py'),
                               'tmenv.gamepad.TmGamepad.path': ('gamepad.html#tmgamepad.path', 'tmenv/gamepad.py'),
                               'tmenv.gamepad.TmGamepad.respawn': ('gamepad.html#tmgamepad.respawn', 'tmenv/gamepad.py'),
                               'tmenv.gamepad.TmGamepad.tap_a': ('gamepad.html#tmgamepad.tap_a', 'tmenv/gamepad.py'),
                               'tmenv.gamepad.TmGamepad.tap_abs': ('gamepad.html#tmgamepad.tap_abs', 'tmenv/gamepad.py'),
                               'tmenv.gamepad.TmGamepad.tap_b': ('gamepad.html#tmgamepad.tap_b', 'tmenv/gamepad.py'),
                               'tmenv.gamepad.TmGamepad.tap_btn': ('gamepad.html#tmgamepad.tap_btn', 'tmenv/gamepad.py'),
                               'tmenv.gamepad.TmGamepad.toggle_interface': ('gamepad.html#tmgamepad.toggle_interface', 'tmenv/gamepad.py')},
            'tmenv.gbx': { 'tmenv.gbx.CorruptedGhostException': ('gbx.html#corruptedghostexception', 'tmenv/gbx.py'),
                           'tmenv.gbx.campaign': ('gbx.html#campaign', 'tmenv/gbx.py'),
                           'tmenv.gbx.campaign_maps_uid': ('gbx.html#campaign_maps_uid', 'tmenv/gbx.py'),
                           'tmenv.gbx.campaigns_maps_uid': ('gbx.html#campaigns_maps_uid', 'tmenv/gbx.py'),
                           'tmenv.gbx.gbx_bytes_to_json': ('gbx.html#gbx_bytes_to_json', 'tmenv/gbx.py'),
                           'tmenv.gbx.gbx_data_from_file': ('gbx.html#gbx_data_from_file', 'tmenv/gbx.py'),
                           'tmenv.gbx.gbx_data_from_url': ('gbx.html#gbx_data_from_url', 'tmenv/gbx.py'),
                           'tmenv.gbx.gbx_time_to_ms': ('gbx.html#gbx_time_to_ms', 'tmenv/gbx.py'),
                           'tmenv.gbx.ghost_from_file': ('gbx.html#ghost_from_file', 'tmenv/gbx.py'),
                           'tmenv.gbx.ghost_from_url': ('gbx.html#ghost_from_url', 'tmenv/gbx.py'),
                           'tmenv.gbx.ghost_wr_from_map_uid': ('gbx.html#ghost_wr_from_map_uid', 'tmenv/gbx.py'),
                           'tmenv.gbx.ghost_wr_url_from_map_uid': ('gbx.html#ghost_wr_url_from_map_uid', 'tmenv/gbx.py'),
                           'tmenv.gbx.map_from_file': ('gbx.html#map_from_file', 'tmenv/gbx.py'),
                           'tmenv.gbx.map_from_uid': ('gbx.html#map_from_uid', 'tmenv/gbx.py'),
                           'tmenv.gbx.map_from_url': ('gbx.html#map_from_url', 'tmenv/gbx.py'),
                           'tmenv.gbx.map_url_from_uid': ('gbx.html#map_url_from_uid', 'tmenv/gbx.py'),
                           'tmenv.gbx.official_campaign': ('gbx.html#official_campaign', 'tmenv/gbx.py'),
                           'tmenv.gbx.official_campaigns': ('gbx.html#official_campaigns', 'tmenv/gbx.py'),
                           'tmenv.gbx.parse_ghost': ('gbx.html#parse_ghost', 'tmenv/gbx.py'),
                           'tmenv.gbx.parse_map': ('gbx.html#parse_map', 'tmenv/gbx.py'),
                           'tmenv.gbx.parse_sample': ('gbx.html#parse_sample', 'tmenv/gbx.py'),
                           'tmenv.gbx.sanitize_map_name': ('gbx.html#sanitize_map_name', 'tmenv/gbx.py')},
            'tmenv.prefix': { 'tmenv.prefix.Prefix': ('prefix.html#prefix', 'tmenv/prefix.py'),
                              'tmenv.prefix.Prefix.__init__': ('prefix.html#prefix.__init__', 'tmenv/prefix.py'),
                              'tmenv.prefix.Prefix._copy_credential': ('prefix.html#prefix._copy_credential', 'tmenv/prefix.py'),
                              'tmenv.prefix.Prefix._copy_template': ('prefix.html#prefix._copy_template', 'tmenv/prefix.py'),
                              'tmenv.prefix.Prefix.add_reg': ('prefix.html#prefix.add_reg', 'tmenv/prefix.py'),
                              'tmenv.prefix.Prefix.delete_reg': ('prefix.html#prefix.delete_reg', 'tmenv/prefix.py'),
                              'tmenv.prefix.Prefix.hide_taskbar': ('prefix.html#prefix.hide_taskbar', 'tmenv/prefix.py'),
                              'tmenv.prefix.Prefix.kill': ('prefix.html#prefix.kill', 'tmenv/prefix.py'),
                              'tmenv.prefix.Prefix.run': ('prefix.html#prefix.run', 'tmenv/prefix.py'),
                              'tmenv.prefix.Prefix.running': ('prefix.html#prefix.running', 'tmenv/prefix.py'),
                              'tmenv.prefix.Prefix.save_credential': ('prefix.html#prefix.save_credential', 'tmenv/prefix.py'),
                              'tmenv.prefix.Prefix.set_socket_port': ('prefix.html#prefix.set_socket_port', 'tmenv/prefix.py')},
            'tmenv.socket': { 'tmenv.socket.ListValueParser': ('socket.html#listvalueparser', 'tmenv/socket.py'),
                              'tmenv.socket.ListValueParser.__call__': ('socket.html#listvalueparser.__call__', 'tmenv/socket.py'),
                              'tmenv.socket.ListValueParser.__init__': ('socket.html#listvalueparser.__init__', 'tmenv/socket.py'),
                              'tmenv.socket.SimpleValueParser': ('socket.html#simplevalueparser', 'tmenv/socket.py'),
                              'tmenv.socket.SimpleValueParser.__call__': ('socket.html#simplevalueparser.__call__', 'tmenv/socket.py'),
                              'tmenv.socket.SimpleValueParser.__init__': ('socket.html#simplevalueparser.__init__', 'tmenv/socket.py'),
                              'tmenv.socket.Socket': ('socket.html#socket', 'tmenv/socket.py'),
                              'tmenv.socket.Socket.__del__': ('socket.html#socket.__del__', 'tmenv/socket.py'),
                              'tmenv.socket.Socket.__init__': ('socket.html#socket.__init__', 'tmenv/socket.py'),
                              'tmenv.socket.Socket.run': ('socket.html#socket.run', 'tmenv/socket.py'),
                              'tmenv.socket.Socket.send_command': ('socket.html#socket.send_command', 'tmenv/socket.py'),
                              'tmenv.socket.TelemetryParser': ('socket.html#telemetryparser', 'tmenv/socket.py'),
                              'tmenv.socket.TelemetryParser.__call__': ('socket.html#telemetryparser.__call__', 'tmenv/socket.py'),
                              'tmenv.socket.TelemetryParser.__init__': ('socket.html#telemetryparser.__init__', 'tmenv/socket.py'),
                              'tmenv.socket.build_parser': ('socket.html#build_parser', 'tmenv/socket.py')},
            'tmenv.tmenv': { 'tmenv.tmenv.ActionHandler': ('tmenv.html#actionhandler', 'tmenv/tmenv.py'),
                             'tmenv.tmenv.ActionHandler.action_dict': ('tmenv.html#actionhandler.action_dict', 'tmenv/tmenv.py'),
                             'tmenv.tmenv.ActionHandler.default_action_dict': ( 'tmenv.html#actionhandler.default_action_dict',
                                                                                'tmenv/tmenv.py'),
                             'tmenv.tmenv.ActionHandler.mirror': ('tmenv.html#actionhandler.mirror', 'tmenv/tmenv.py'),
                             'tmenv.tmenv.ActionHandler.name': ('tmenv.html#actionhandler.name', 'tmenv/tmenv.py'),
                             'tmenv.tmenv.ContinuousActionHandler': ('tmenv.html#continuousactionhandler', 'tmenv/tmenv.py'),
                             'tmenv.tmenv.ContinuousActionHandler.__init__': ( 'tmenv.html#continuousactionhandler.__init__',
                                                                               'tmenv/tmenv.py'),
                             'tmenv.tmenv.ContinuousActionHandler.action_dict': ( 'tmenv.html#continuousactionhandler.action_dict',
                                                                                  'tmenv/tmenv.py'),
                             'tmenv.tmenv.ContinuousActionHandler.mirror': ('tmenv.html#continuousactionhandler.mirror', 'tmenv/tmenv.py'),
                             'tmenv.tmenv.ContinuousActionHandler.print_actions': ( 'tmenv.html#continuousactionhandler.print_actions',
                                                                                    'tmenv/tmenv.py'),
                             'tmenv.tmenv.DiscreteActionHandler': ('tmenv.html#discreteactionhandler', 'tmenv/tmenv.py'),
                             'tmenv.tmenv.DiscreteActionHandler.__init__': ('tmenv.html#discreteactionhandler.__init__', 'tmenv/tmenv.py'),
                             'tmenv.tmenv.DiscreteActionHandler.action_dict': ( 'tmenv.html#discreteactionhandler.action_dict',
                                                                                'tmenv/tmenv.py'),
                             'tmenv.tmenv.DiscreteActionHandler.mirror': ('tmenv.html#discreteactionhandler.mirror', 'tmenv/tmenv.py'),
                             'tmenv.tmenv.DiscreteActionHandler.print_actions': ( 'tmenv.html#discreteactionhandler.print_actions',
                                                                                  'tmenv/tmenv.py'),
                             'tmenv.tmenv.MapNotLoadedException': ('tmenv.html#mapnotloadedexception', 'tmenv/tmenv.py'),
                             'tmenv.tmenv.MixedActionHandler': ('tmenv.html#mixedactionhandler', 'tmenv/tmenv.py'),
                             'tmenv.tmenv.MixedActionHandler.__init__': ('tmenv.html#mixedactionhandler.__init__', 'tmenv/tmenv.py'),
                             'tmenv.tmenv.MixedActionHandler.action_dict': ('tmenv.html#mixedactionhandler.action_dict', 'tmenv/tmenv.py'),
                             'tmenv.tmenv.MixedActionHandler.mirror': ('tmenv.html#mixedactionhandler.mirror', 'tmenv/tmenv.py'),
                             'tmenv.tmenv.MixedActionHandler.print_actions': ( 'tmenv.html#mixedactionhandler.print_actions',
                                                                               'tmenv/tmenv.py'),
                             'tmenv.tmenv.TelemetryTimeout': ('tmenv.html#telemetrytimeout', 'tmenv/tmenv.py'),
                             'tmenv.tmenv.Tmenv': ('tmenv.html#tmenv', 'tmenv/tmenv.py'),
                             'tmenv.tmenv.Tmenv.__init__': ('tmenv.html#tmenv.__init__', 'tmenv/tmenv.py'),
                             'tmenv.tmenv.Tmenv.close': ('tmenv.html#tmenv.close', 'tmenv/tmenv.py'),
                             'tmenv.tmenv.Tmenv.config': ('tmenv.html#tmenv.config', 'tmenv/tmenv.py'),
                             'tmenv.tmenv.Tmenv.env_info': ('tmenv.html#tmenv.env_info', 'tmenv/tmenv.py'),
                             'tmenv.tmenv.Tmenv.env_observation': ('tmenv.html#tmenv.env_observation', 'tmenv/tmenv.py'),
                             'tmenv.tmenv.Tmenv.game': ('tmenv.html#tmenv.game', 'tmenv/tmenv.py'),
                             'tmenv.tmenv.Tmenv.has_map': ('tmenv.html#tmenv.has_map', 'tmenv/tmenv.py'),
                             'tmenv.tmenv.Tmenv.load_map': ('tmenv.html#tmenv.load_map', 'tmenv/tmenv.py'),
                             'tmenv.tmenv.Tmenv.recover': ('tmenv.html#tmenv.recover', 'tmenv/tmenv.py'),
                             'tmenv.tmenv.Tmenv.reset': ('tmenv.html#tmenv.reset', 'tmenv/tmenv.py'),
                             'tmenv.tmenv.Tmenv.respawn': ('tmenv.html#tmenv.respawn', 'tmenv/tmenv.py'),
                             'tmenv.tmenv.Tmenv.step': ('tmenv.html#tmenv.step', 'tmenv/tmenv.py'),
                             'tmenv.tmenv.Tmenv.wait_telemetry_update': ('tmenv.html#tmenv.wait_telemetry_update', 'tmenv/tmenv.py')},
            'tmenv.trajectory': { 'tmenv.trajectory.Trajectory': ('trajectory.html#trajectory', 'tmenv/trajectory.py'),
                                  'tmenv.trajectory.Trajectory.__init__': ('trajectory.html#trajectory.__init__', 'tmenv/trajectory.py'),
                                  'tmenv.trajectory.Trajectory._distances': ( 'trajectory.html#trajectory._distances',
                                                                              'tmenv/trajectory.py'),
                                  'tmenv.trajectory.Trajectory.aligned': ('trajectory.html#trajectory.aligned', 'tmenv/trajectory.py'),
                                  'tmenv.trajectory.Trajectory.frame_trajectory': ( 'trajectory.html#trajectory.frame_trajectory',
                                                                                    'tmenv/trajectory.py'),
                                  'tmenv.trajectory.Trajectory.next_positions': ( 'trajectory.html#trajectory.next_positions',
                                                                                  'tmenv/trajectory.py'),
                                  'tmenv.trajectory.Trajectory.observation': ( 'trajectory.html#trajectory.observation',
                                                                               'tmenv/trajectory.py'),
                                  'tmenv.trajectory.aligned': ('trajectory.html#aligned', 'tmenv/trajectory.py'),
                                  'tmenv.trajectory.segment_dists': ('trajectory.html#segment_dists', 'tmenv/trajectory.py'),
                                  'tmenv.trajectory.segment_project': ('trajectory.html#segment_project', 'tmenv/trajectory.py')},
            'tmenv.window': { 'tmenv.window.MssCapture': ('window.html#msscapture', 'tmenv/window.py'),
                              'tmenv.window.MssCapture.__init__': ('window.html#msscapture.__init__', 'tmenv/window.py'),
                              'tmenv.window.MssCapture.capture': ('window.html#msscapture.capture', 'tmenv/window.py'),
                              'tmenv.window.TmWindow': ('window.html#tmwindow', 'tmenv/window.py'),
                              'tmenv.window.TmWindow.__init__': ('window.html#tmwindow.__init__', 'tmenv/window.py'),
                              'tmenv.window.TmWindow.act': ('window.html#tmwindow.act', 'tmenv/window.py'),
                              'tmenv.window.TmWindow.give_up': ('window.html#tmwindow.give_up', 'tmenv/window.py'),
                              'tmenv.window.TmWindow.respawn': ('window.html#tmwindow.respawn', 'tmenv/window.py'),
                              'tmenv.window.TmWindow.toggle_interface': ('window.html#tmwindow.toggle_interface', 'tmenv/window.py'),
                              'tmenv.window.Window': ('window.html#window', 'tmenv/window.py'),
                              'tmenv.window.Window.__init__': ('window.html#window.__init__', 'tmenv/window.py'),
                              'tmenv.window.Window._find_xlib_window_inner': ( 'window.html#window._find_xlib_window_inner',
                                                                               'tmenv/window.py'),
                              'tmenv.window.Window.capture_image': ('window.html#window.capture_image', 'tmenv/window.py'),
                              'tmenv.window.Window.capture_numpy_array': ('window.html#window.capture_numpy_array', 'tmenv/window.py'),
                              'tmenv.window.Window.capture_tensor': ('window.html#window.capture_tensor', 'tmenv/window.py'),
                              'tmenv.window.Window.find_xlib_window': ('window.html#window.find_xlib_window', 'tmenv/window.py'),
                              'tmenv.window.Window.has_texts': ('window.html#window.has_texts', 'tmenv/window.py'),
                              'tmenv.window.Window.key_press': ('window.html#window.key_press', 'tmenv/window.py'),
                              'tmenv.window.Window.key_release': ('window.html#window.key_release', 'tmenv/window.py'),
                              'tmenv.window.Window.key_tap': ('window.html#window.key_tap', 'tmenv/window.py'),
                              'tmenv.window.Window.key_to_code': ('window.html#window.key_to_code', 'tmenv/window.py'),
                              'tmenv.window.Window.read_paragraphs': ('window.html#window.read_paragraphs', 'tmenv/window.py'),
                              'tmenv.window.Window.send_key_event': ('window.html#window.send_key_event', 'tmenv/window.py'),
                              'tmenv.window.Window.set_position': ('window.html#window.set_position', 'tmenv/window.py'),
                              'tmenv.window.Window.sync': ('window.html#window.sync', 'tmenv/window.py'),
                              'tmenv.window.Window.update_geometry': ('window.html#window.update_geometry', 'tmenv/window.py')},
            'tmenv.wrappers': { 'tmenv.wrappers.AlignedState': ('wrappers.html#alignedstate', 'tmenv/wrappers.py'),
                                'tmenv.wrappers.AlignedState.__init__': ('wrappers.html#alignedstate.__init__', 'tmenv/wrappers.py'),
                                'tmenv.wrappers.AlignedState.state': ('wrappers.html#alignedstate.state', 'tmenv/wrappers.py'),
                                'tmenv.wrappers.EpisodeInfoWrapper': ('wrappers.html#episodeinfowrapper', 'tmenv/wrappers.py'),
                                'tmenv.wrappers.EpisodeInfoWrapper.add_segment': ( 'wrappers.html#episodeinfowrapper.add_segment',
                                                                                   'tmenv/wrappers.py'),
                                'tmenv.wrappers.EpisodeInfoWrapper.reset': ('wrappers.html#episodeinfowrapper.reset', 'tmenv/wrappers.py'),
                                'tmenv.wrappers.EpisodeInfoWrapper.respawn': ( 'wrappers.html#episodeinfowrapper.respawn',
                                                                               'tmenv/wrappers.py'),
                                'tmenv.wrappers.EpisodeInfoWrapper.step': ('wrappers.html#episodeinfowrapper.step', 'tmenv/wrappers.py'),
                                'tmenv.wrappers.MapState': ('wrappers.html#mapstate', 'tmenv/wrappers.py'),
                                'tmenv.wrappers.MapState.__init__': ('wrappers.html#mapstate.__init__', 'tmenv/wrappers.py'),
                                'tmenv.wrappers.MapState.state': ('wrappers.html#mapstate.state', 'tmenv/wrappers.py'),
                                'tmenv.wrappers.PositionalEncoder': ('wrappers.html#positionalencoder', 'tmenv/wrappers.py'),
                                'tmenv.wrappers.PositionalEncoder.__call__': ( 'wrappers.html#positionalencoder.__call__',
                                                                               'tmenv/wrappers.py'),
                                'tmenv.wrappers.PositionalEncoder.__init__': ( 'wrappers.html#positionalencoder.__init__',
                                                                               'tmenv/wrappers.py'),
                                'tmenv.wrappers.RotationEnvWrapper': ('wrappers.html#rotationenvwrapper', 'tmenv/wrappers.py'),
                                'tmenv.wrappers.RotationEnvWrapper.__init__': ( 'wrappers.html#rotationenvwrapper.__init__',
                                                                                'tmenv/wrappers.py'),
                                'tmenv.wrappers.RotationEnvWrapper._rotation': ( 'wrappers.html#rotationenvwrapper._rotation',
                                                                                 'tmenv/wrappers.py'),
                                'tmenv.wrappers.RotationEnvWrapper.reset': ('wrappers.html#rotationenvwrapper.reset', 'tmenv/wrappers.py'),
                                'tmenv.wrappers.RotationEnvWrapper.respawn': ( 'wrappers.html#rotationenvwrapper.respawn',
                                                                               'tmenv/wrappers.py'),
                                'tmenv.wrappers.RotationEnvWrapper.step': ('wrappers.html#rotationenvwrapper.step', 'tmenv/wrappers.py'),
                                'tmenv.wrappers.StateWrapper': ('wrappers.html#statewrapper', 'tmenv/wrappers.py'),
                                'tmenv.wrappers.StateWrapper.__init__': ('wrappers.html#statewrapper.__init__', 'tmenv/wrappers.py'),
                                'tmenv.wrappers.StateWrapper.observation_name': ( 'wrappers.html#statewrapper.observation_name',
                                                                                  'tmenv/wrappers.py'),
                                'tmenv.wrappers.StateWrapper.reset': ('wrappers.html#statewrapper.reset', 'tmenv/wrappers.py'),
                                'tmenv.wrappers.StateWrapper.respawn': ('wrappers.html#statewrapper.respawn', 'tmenv/wrappers.py'),
                                'tmenv.wrappers.StateWrapper.state': ('wrappers.html#statewrapper.state', 'tmenv/wrappers.py'),
                                'tmenv.wrappers.StateWrapper.step': ('wrappers.html#statewrapper.step', 'tmenv/wrappers.py'),
                                'tmenv.wrappers.TelemetryState': ('wrappers.html#telemetrystate', 'tmenv/wrappers.py'),
                                'tmenv.wrappers.TelemetryState.__init__': ('wrappers.html#telemetrystate.__init__', 'tmenv/wrappers.py'),
                                'tmenv.wrappers.TelemetryState.state': ('wrappers.html#telemetrystate.state', 'tmenv/wrappers.py'),
                                'tmenv.wrappers.TelemetryState.step': ('wrappers.html#telemetrystate.step', 'tmenv/wrappers.py'),
                                'tmenv.wrappers.TrajectoryDoneWrapper': ('wrappers.html#trajectorydonewrapper', 'tmenv/wrappers.py'),
                                'tmenv.wrappers.TrajectoryDoneWrapper.__init__': ( 'wrappers.html#trajectorydonewrapper.__init__',
                                                                                   'tmenv/wrappers.py'),
                                'tmenv.wrappers.TrajectoryDoneWrapper.reset': ( 'wrappers.html#trajectorydonewrapper.reset',
                                                                                'tmenv/wrappers.py'),
                                'tmenv.wrappers.TrajectoryDoneWrapper.respawn': ( 'wrappers.html#trajectorydonewrapper.respawn',
                                                                                  'tmenv/wrappers.py'),
                                'tmenv.wrappers.TrajectoryDoneWrapper.step': ( 'wrappers.html#trajectorydonewrapper.step',
                                                                               'tmenv/wrappers.py'),
                                'tmenv.wrappers.TrajectoryDoneWrapper.update_observation': ( 'wrappers.html#trajectorydonewrapper.update_observation',
                                                                                             'tmenv/wrappers.py'),
                                'tmenv.wrappers.TrajectoryEnvWrapper': ('wrappers.html#trajectoryenvwrapper', 'tmenv/wrappers.py'),
                                'tmenv.wrappers.TrajectoryEnvWrapper.__init__': ( 'wrappers.html#trajectoryenvwrapper.__init__',
                                                                                  'tmenv/wrappers.py'),
                                'tmenv.wrappers.TrajectoryEnvWrapper.load_map': ( 'wrappers.html#trajectoryenvwrapper.load_map',
                                                                                  'tmenv/wrappers.py'),
                                'tmenv.wrappers.TrajectoryEnvWrapper.reset': ( 'wrappers.html#trajectoryenvwrapper.reset',
                                                                               'tmenv/wrappers.py'),
                                'tmenv.wrappers.TrajectoryEnvWrapper.respawn': ( 'wrappers.html#trajectoryenvwrapper.respawn',
                                                                                 'tmenv/wrappers.py'),
                                'tmenv.wrappers.TrajectoryEnvWrapper.step': ( 'wrappers.html#trajectoryenvwrapper.step',
                                                                              'tmenv/wrappers.py'),
                                'tmenv.wrappers.TrajectoryState': ('wrappers.html#trajectorystate', 'tmenv/wrappers.py'),
                                'tmenv.wrappers.TrajectoryState.__init__': ('wrappers.html#trajectorystate.__init__', 'tmenv/wrappers.py'),
                                'tmenv.wrappers.TrajectoryState.state': ('wrappers.html#trajectorystate.state', 'tmenv/wrappers.py'),
                                'tmenv.wrappers.TrajectoryTravelRewardWrapper': ( 'wrappers.html#trajectorytravelrewardwrapper',
                                                                                  'tmenv/wrappers.py'),
                                'tmenv.wrappers.TrajectoryTravelRewardWrapper.__init__': ( 'wrappers.html#trajectorytravelrewardwrapper.__init__',
                                                                                           'tmenv/wrappers.py'),
                                'tmenv.wrappers.TrajectoryTravelRewardWrapper.distance_penalty': ( 'wrappers.html#trajectorytravelrewardwrapper.distance_penalty',
                                                                                                   'tmenv/wrappers.py'),
                                'tmenv.wrappers.TrajectoryTravelRewardWrapper.reset': ( 'wrappers.html#trajectorytravelrewardwrapper.reset',
                                                                                        'tmenv/wrappers.py'),
                                'tmenv.wrappers.TrajectoryTravelRewardWrapper.respawn': ( 'wrappers.html#trajectorytravelrewardwrapper.respawn',
                                                                                          'tmenv/wrappers.py'),
                                'tmenv.wrappers.TrajectoryTravelRewardWrapper.step': ( 'wrappers.html#trajectorytravelrewardwrapper.step',
                                                                                       'tmenv/wrappers.py'),
                                'tmenv.wrappers.TrajectoryTravelRewardWrapper.travel_reward': ( 'wrappers.html#trajectorytravelrewardwrapper.travel_reward',
                                                                                                'tmenv/wrappers.py'),
                                'tmenv.wrappers.VisualState': ('wrappers.html#visualstate', 'tmenv/wrappers.py'),
                                'tmenv.wrappers.VisualState.__init__': ('wrappers.html#visualstate.__init__', 'tmenv/wrappers.py'),
                                'tmenv.wrappers.VisualState.state': ('wrappers.html#visualstate.state', 'tmenv/wrappers.py'),
                                'tmenv.wrappers.WheelState': ('wrappers.html#wheelstate', 'tmenv/wrappers.py'),
                                'tmenv.wrappers.WheelState.__init__': ('wrappers.html#wheelstate.__init__', 'tmenv/wrappers.py'),
                                'tmenv.wrappers.WheelState.state': ('wrappers.html#wheelstate.state', 'tmenv/wrappers.py'),
                                'tmenv.wrappers.WheelState.wheel_state': ('wrappers.html#wheelstate.wheel_state', 'tmenv/wrappers.py'),
                                'tmenv.wrappers.angle_diff': ('wrappers.html#angle_diff', 'tmenv/wrappers.py'),
                                'tmenv.wrappers.vec2np': ('wrappers.html#vec2np', 'tmenv/wrappers.py'),
                                'tmenv.wrappers.vec2rotation': ('wrappers.html#vec2rotation', 'tmenv/wrappers.py')}}}
